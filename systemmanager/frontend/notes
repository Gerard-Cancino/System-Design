

### Function Based View ###
# @api_view(['GET','POST'])
# def user_list(request, format=None):
#   if request.method == 'GET':
#     users = User.objects.all()
#     serializer = UserSerializer(users, many=True)
#     return Response(serializer.data)
#   elif request.method == 'POST':
#     serializer = UserSerializer(data=request.data)
#     if serializer.is_valid():
#       serializer.save()
#       return Response(serializer.data, status=status.HTTP_201_CREATED)
#     return Response(serializer.errors, status=status.HTTP_400_BAD_REQUEST)

# class UserList(APIView):
#   def get(self, request,format=None):
#     users = User.objects.all()
#     serializer = UserSerializer(user,many=True)
#     return Response(serializer.data)
#   def post(self, request, format=None):
#     serializer = UserSerializer(data=request.data)
#     if serializer.is_valid():
#       serializer.save()
#       return Response(serializer.data, status=status.HTTP_201_CREATED)
#     return Response(serializer.errors, status=status.HTTP_400_BAD_REQUEST)

# @api_view(['GET','PUT'])
# def user_detail(request, email, format=None):
#   try :
#     user = User.objects.get(email=email)
#   except User.DoesNotExist:
#     return Response(status=status.HTTP_404_NOT_FOUND)
  
#   if request.method == 'GET':
#     serializer = UserSerializer(user)
#     return Response(serializer.data)
#   elif request.method == 'PUT':
#     serializer = UserSerializer(user, data=request.data)
#     if serializer.is_valid():
#       serializer.save()
#       return Response(serializer.data)
#     return Response(serializer.errors, status=status.HTTP_400_BAD_REQUEST)

# class UserDetail(APIView):
#   def get_object(self, email):
#     try:
#       return User.objects.get(email=email)
#     except User.DoesNotExist:
#       raise Http404
  
#   def get(self, request, email, format=None):
#     user = self.get_object(email)
#     serializer = UserSerializer(user)
#     return Response(serializer.data)
  
#   def put(self, request, email, format=None):
#     user = self.get_object(email)
#     serializer = UserSerializr(user, data=request.data)
#     if serializer.is_valid():
#       serializer.save()
#       return Resposne(serializer.data)
#     return Response(serializer.errors, status=status.HTTP_400_BAD_REQUEST)
